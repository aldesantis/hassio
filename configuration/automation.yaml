- id: 'turn_devices_off_when_away'
  alias: Turn devices off when away
  trigger:
  - entity_id: group.tutti
    platform: state
    from: home
  condition: []
  action:
    - service: script.turn_ac_off
    - service: script.turn_lights_off
    - service: script.turn_tv_off
    - service: script.turn_music_off

- id: 'back_up_dropbox_nightly'
  alias: Back up to Dropbox nightly
  trigger:
  - at: 00:00:00
    platform: time
  condition: []
  action:
  - service: hassio.snapshot_full
  - data:
      addon: 7be23ff5_dropbox_sync
      input:
        command: upload
    service: hassio.addon_stdin

- id: 'notify_cloe_when_alessandro_gets_home'
  alias: Notify Cloe when Alessandro gets home
  trigger:
  - entity_id: person.alessandro_desantis
    event: enter
    platform: zone
    zone: zone.home
  condition: []
  action:
  - data:
      message: Alessandro è arrivato a casa!
    service: notify.ios_iphone_di_cloe

- id: 'notify_alessandro_when_cloe_gets_home'
  alias: Notify Alessandro when Cloe gets home
  trigger:
  - entity_id: person.cloe_filippi
    event: enter
    platform: zone
    zone: zone.home
  condition: []
  action:
  - data:
      message: Cloe è arrivata a casa!
    service: notify.ios_iphone_di_alessandro

- id: 'turn_lights_off_when_opening_blinds'
  alias: Turn lights off when blinds are opened
  trigger:
    - platform: state
      entity_id: cover.camera_da_letto
      to: open
  condition:
    condition: state
    entity_id: sun.sun
    state: above_horizon
  action:
    - service: light.turn_off
      data:
        entity_id: light.camera_da_letto

- id: 'turn_lights_on_when_closing_blinds'
  alias: Turn lights on when blinds are closed
  trigger:
    - platform: state
      entity_id: cover.camera_da_letto
      to: closed
  condition:
    condition: time
    after: '08:00:00'
    before: '23:00:00'
  action:
    - service: light.turn_on
      data:
        entity_id: light.camera_da_letto

- id: 'run_goodnight_at_night'
  alias: Run Goodnight script at night
  trigger:
    - at: 02:00:00
      platform: time
  action:
    - service: script.goodnight

- id: 'dim_lights_at_night'
  alias: Dim lights at night
  trigger:
    platform: event
    event_type: state_changed
  condition:
    condition: and
    conditions:
    - condition: template
      value_template: '{{ trigger.event.data.entity_id.startswith(''light.'') }}'
    - condition: template
      value_template: '{{ trigger.event.data.old_state.state != ''on'' }}'
    - condition: template
      value_template: '{{ trigger.event.data.new_state.state == ''on'' }}'
    - condition: template
      value_template: '{{ trigger.event.data.new_state.attributes.brightness > 50 }}'
    - condition: time
      before: '08:00:00'
      after: '23:00:00'
  action:
    service: light.turn_on
    data_template:
      entity_id: '{{ trigger.event.data.entity_id }}'
    data:
      brightness: 50

- id: 'turn_light_on_for_calendar_event'
  alias: Turn light on when calendar event starts
  trigger:
    platform: state
    entity_id: group.calendars
    to: 'on'
  action:
    service: light.turn_on
    data:
      entity_id: light.disimpegno

- id: 'turn_light_off_for_calendar_event'
  alias: Turn light off when calendar event starts
  trigger:
    platform: state
    entity_id: group.calendars
    to: 'off'
  action:
    service: light.turn_off
    data:
      entity_id: light.disimpegno

- id: 'set_theme_when_sun_moves'
  alias: Set theme when sun moves
  trigger:
    platform: state
    entity_id: sun.sun
  action:
    - service: frontend.set_theme
      data_template:
        name: "{{ states('sensor.current_theme') }}"

- id: 'set_theme_on_boot'
  alias: Set theme on boot
  trigger:
    platform: homeassistant
    event: start
  action:
    - service: frontend.set_theme
      data_template:
        name: "{{ states('sensor.current_theme') }}"
